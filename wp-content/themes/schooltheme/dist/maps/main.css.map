{"version":3,"sources":["parts/fonts.scss","parts/icons.scss","parts/site.scss","parts/head.scss","parts/variables.scss","vendor/_include-media.scss","parts/toggle.scss","parts/footer.scss","parts/breadcrumbs.scss","parts/elementor-intro.scss","parts/elementor-last-news.scss","parts/elementor-testimonials.scss"],"names":[],"mappings":"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","file":"../../src/scss/main.css","sourcesContent":["@font-face {\r\n    font-family: 'baloo2-regular';\r\n    src: url('./../../dist/fonts/baloo2/Baloo2-Regular.ttf') format('truetype');\r\n}\r\n@font-face {\r\n    font-family: 'baloo2-medium';\r\n    src: url('./../../dist/fonts/baloo2/Baloo2-Medium.ttf') format('truetype');\r\n}\r\n@font-face {\r\n    font-family: 'baloo2-semibold';\r\n    src: url('./../../dist/fonts/baloo2/Baloo2-SemiBold.ttf') format('truetype');\r\n}\r\n@font-face {\r\n    font-family: 'baloo2-bold';\r\n    src: url('./../../dist/fonts/baloo2/Baloo2-Bold.ttf') format('truetype');\r\n}\r\n@font-face {\r\n    font-family: 'baloo2-extrabold';\r\n    src: url('./../../dist/fonts/baloo2/Baloo2-ExtraBold.ttf') format('truetype');\r\n}\r\n\r\n$baloo2-regular: 'baloo2-regular';\r\n$baloo2-medium: 'baloo2-medium';\r\n$baloo2-semibold: 'baloo2-semibold';\r\n$baloo2-bold: 'baloo2-bold';\r\n$baloo2-extrabold: 'baloo2-extrabold';","@font-face {\n\tfont-family: \"bcFont\";\n\tsrc: url('../../dist/fonts/bcFont.eot');\n\tsrc: url('../../dist/fonts/bcFont.eot?#iefix') format('eot'),\n\t\turl('../../dist/fonts/bcFont.woff2') format('woff2'),\n\t\turl('../../dist/fonts/bcFont.woff') format('woff'),\n\t\turl('../../dist/fonts/bcFont.ttf') format('truetype'),\n\t\turl('../../dist/fonts/bcFont.svg#bcFont') format('svg');\n}\n\n@mixin icon-styles {\n\tfont-family: \"bcFont\";\n\t\t-webkit-font-smoothing: antialiased;\n\t\t-moz-osx-font-smoothing: grayscale;\n\tfont-style: normal;\n\tfont-variant: normal;\n\tfont-weight: normal;\n\t// speak: none; // only necessary if not using the private unicode range (firstGlyph option)\n\ttext-decoration: none;\n\ttext-transform: none;\n}\n\n%icon {\n\t@include icon-styles;\n}\n\n@function icon-char($filename) {\n\t$char: \"\";\n\n\t@if $filename == arrowsingle {\n\t\t$char: \"\\E001\";\n\t}\n\t@if $filename == down {\n\t\t$char: \"\\E002\";\n\t}\n\t@if $filename == quote {\n\t\t$char: \"\\E003\";\n\t}\n\n\t@return $char;\n}\n\n@mixin icon($filename, $insert: before, $extend: true) {\n\t&:#{$insert} {\n\t\t@if $extend {\n\t\t\t@extend %icon;\n\t\t} @else {\n\t\t\t@include icon-styles;\n\t\t}\n\t\tcontent: icon-char($filename);\n\t}\n}\n\n.icon-arrowsingle {\n\t@include icon(arrowsingle);\n}\n.icon-down {\n\t@include icon(down);\n}\n.icon-quote {\n\t@include icon(quote);\n}\n","/* Main style settings, that are used overall */\r\nbody {\r\n    overflow-x: hidden;\r\n    font-family: $baloo2-regular;\r\n}\r\n\r\n.section {\r\n    width: 100%;\r\n}\r\n\r\n.elementor-column-gap-default>.elementor-row>.elementor-column>.elementor-element-populated {\r\n    padding: 0 !important;\r\n}",".bc--header {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 100%;\r\n    .bc--topmenu {\r\n        display: flex;\r\n        height: 40px;\r\n        background: $topmenu-background;\r\n        justify-content: space-between;\r\n        padding: 0 15px;\r\n        .left {\r\n            align-self: center;\r\n        }\r\n        .right {\r\n            align-self: center;\r\n            display: flex;\r\n            .top-menu {\r\n                align-self: center;\r\n                ul {\r\n                    list-style: none;\r\n                    display: flex;\r\n                    margin: 0;\r\n                    li {\r\n                        align-self: center;\r\n                        a {\r\n                            transition: all .2s ease-in-out;\r\n                            text-decoration: none;\r\n                            color: $white;\r\n                            &:hover {\r\n                                color: $hover-color;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .bc--navigation {\r\n        height: 110px;\r\n        border-bottom: 3px solid $border-color;\r\n        .left {\r\n            display: flex;\r\n            justify-content: flex-start;\r\n            .school-logo {\r\n                align-self: center;\r\n            }\r\n        }\r\n\r\n        .right {\r\n            display: flex;\r\n            justify-content: flex-end;\r\n            .navigation {\r\n                display: flex;\r\n                .big-navigation {\r\n                    display: flex;\r\n                    align-self: center;\r\n                    .menu-hauptmenue-container {\r\n                        .main-menu {\r\n                            display: flex;\r\n                            justify-content: center;\r\n                            flex-direction: row;\r\n                            list-style-type: none;\r\n                            margin: 0;\r\n                            li {\r\n                                margin: 15px 25px;\r\n                                display: flex;\r\n                                align-self: center;\r\n                                .subitem-link {\r\n                                    align-self: center;\r\n                                    transition: all .2s ease-in-out;\r\n                                    text-decoration: none;\r\n                                    font-size: 18px;\r\n                                    font-family: $baloo2-semibold;\r\n                                    color: $list-color;\r\n                                    cursor: pointer;\r\n                                    span {\r\n                                        margin-top: -5px;\r\n                                        position: absolute;\r\n                                        align-self: center;\r\n                                        transition: all .2s ease-in-out;\r\n                                        margin-left: 5px;\r\n                                        color: $arrow-color;\r\n                                    }\r\n                                }\r\n                                .sub-menu-container {\r\n                                    margin-top: 30px;\r\n                                    transition: all .2s ease-in-out;\r\n                                    opacity: 0;\r\n                                    .sub-menu {\r\n                                        display: none;\r\n                                    }\r\n                                }\r\n                                &:hover {\r\n                                    .sub-menu-container {\r\n                                        display: flex;\r\n                                        justify-content: center;\r\n                                        height: 75px;\r\n                                        opacity: 1;\r\n                                        width: 100%;\r\n                                        left: 0;\r\n                                        background: rgb(170, 170, 170);\r\n                                        position: fixed;\r\n                                        .sub-menu {\r\n                                            display: flex;\r\n                                            justify-content: flex-end;\r\n                                            li {\r\n                                                align-self: center;\r\n                                                a {\r\n                                                    color: $list-color;\r\n                                                }\r\n                                            }\r\n                                        }\r\n                                    }\r\n    \r\n                                    .subitem-link {\r\n                                        color: $hover-color;\r\n                                        span {\r\n                                            color: $hover-color;\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    @include media('<=767px') {\r\n                        display: none;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}","$list-color: rgb(29, 29, 29);\r\n$hover-color: rgb(77, 204, 130);\r\n$white: #fff;\r\n$arrow-color: rgb(110, 110, 110);\r\n\r\n$topmenu-background: rgb(61, 61, 61);\r\n$footer-background: rgb(61, 61, 61);\r\n$copyright-background: rgb(155, 155, 155);\r\n$border-color: rgb(61, 61, 61);","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//                http://include-media.com\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n\r\n\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px\r\n) !default;\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}",".nav-menu {\r\n    height: 30px;\r\n    position: absolute;\r\n    right: 30px;\r\n    top: 42px;\r\n    display: block;\r\n    .menu--toggle {\r\n        align-self: center;\r\n        width: 30px;\r\n        height: 24px;\r\n        position: relative;\r\n        -webkit-transform: rotate(0deg);\r\n        -moz-transform: rotate(0deg);\r\n        -o-transform: rotate(0deg);\r\n        transform: rotate(0deg);\r\n        -webkit-transition: .5s ease-in-out;\r\n        -moz-transition: .5s ease-in-out;\r\n        -o-transition: .5s ease-in-out;\r\n        transition: .5s ease-in-out;\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n        span {\r\n            display: block;\r\n            position: absolute;\r\n            height: 4px;\r\n            width: 100%;\r\n            background: $border-color;\r\n            border-radius: 20px;\r\n            opacity: 1;\r\n            left: 0;\r\n            -webkit-transform: rotate(0deg);\r\n            -moz-transform: rotate(0deg);\r\n            -o-transform: rotate(0deg);\r\n            transform: rotate(0deg);\r\n            -webkit-transition: .25s ease-in-out;\r\n            -moz-transition: .25s ease-in-out;\r\n            -o-transition: .25s ease-in-out;\r\n            transition: .25s ease-in-out;\r\n    \r\n            &:nth-child(1) {\r\n                top: 0px;\r\n            }\r\n              \r\n            &:nth-child(2), &:nth-child(3) {\r\n                top: 9px;\r\n            }\r\n              \r\n            &:nth-child(4) {\r\n                top: 18px;\r\n            }\r\n        }\r\n    \r\n        &.open {\r\n            span {\r\n                &:nth-child(1) {\r\n                    top: 9px;\r\n                    width: 0%;\r\n                    left: 50%;\r\n                }\r\n                &:nth-child(2) {\r\n                    -webkit-transform: rotate(45deg);\r\n                    -moz-transform: rotate(45deg);\r\n                    -o-transform: rotate(45deg);\r\n                    transform: rotate(45deg);\r\n                }\r\n                &:nth-child(3) {\r\n                    -webkit-transform: rotate(-45deg);\r\n                    -moz-transform: rotate(-45deg);\r\n                    -o-transform: rotate(-45deg);\r\n                    transform: rotate(-45deg);\r\n                }\r\n                &:nth-child(4) {\r\n                    top: 9px;\r\n                    width: 0%;\r\n                    left: 50%;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    @include media('>767px') {\r\n        display: none;\r\n    }\r\n}",".footer-main {\r\n    background: $footer-background;\r\n    .row {\r\n        .footer-content {\r\n            padding: 50px 0;\r\n            .footer-widgets {\r\n                .footer-col {\r\n                    .widget {\r\n                        list-style: none;\r\n                        .widgettitle {\r\n                            color: $white;\r\n                        }\r\n                        ul {\r\n                            list-style: none;\r\n                            margin: 0;\r\n                            padding: 0;\r\n                            li {\r\n                                a {\r\n                                    text-decoration: none;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    \r\n        .footer-copyright {\r\n            .row {\r\n                justify-content: space-between;\r\n                .left-copy {\r\n                    color: $white;\r\n                }\r\n                .right-copy {\r\n                    color: $white;\r\n                    text-align: right;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",".bc--breadcrumbs {\r\n    .bc--breadcrumbs-navigation {\r\n        display: flex;\r\n        flex-direction: row;\r\n        .delimiter {\r\n            margin: 0px 10px;\r\n        }\r\n    }\r\n}",".intro--section {\r\n    height: 385px;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    .intro--background-image {\r\n        object-fit: cover;\r\n        height: 350px;\r\n        width: 100%;\r\n        position: absolute;\r\n    }\r\n    .headline-box {\r\n        align-self: center;\r\n        position: absolute;\r\n        margin-top: 75px;\r\n        .row {\r\n            flex-direction: column;\r\n            h1 {\r\n                color: $white;\r\n            }\r\n            h2 {\r\n                color: $white;\r\n            }\r\n        }\r\n    }\r\n\r\n    .action-box {\r\n        align-self: center;\r\n        position: absolute;\r\n        bottom: 0;\r\n        .row {\r\n            justify-content: space-between;\r\n            .action {\r\n                cursor: pointer;\r\n                transition: all .2s ease-in-out;\r\n                height: 100px;\r\n                box-shadow: 0px 0px 6px 0px rgb(212, 212, 212);\r\n                border-bottom: 0;\r\n                display: flex;\r\n                justify-content: center;\r\n                flex-direction: row;\r\n                color: $white;\r\n                .action-text {\r\n                    font-size: 24px;\r\n                    align-self: center;\r\n                    margin: 0 0 0 15px;\r\n                    font-family: $baloo2-semibold;\r\n                }\r\n                .action-icon {\r\n                    font-size: 24px;\r\n                    align-self: center;\r\n                }\r\n                &:hover {\r\n                    background: rgb(75, 75, 75) !important;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",".last-news--section {\r\n    background: rgb(140, 191, 238);\r\n    padding: 100px 0;\r\n    .row {\r\n        display: flex;\r\n        justify-content: center;\r\n        .headline {\r\n            text-transform: uppercase;\r\n            text-align: center;\r\n            margin-bottom: 40px;\r\n        }\r\n        .articles {\r\n            .single-article {\r\n                height: 400px;\r\n                display: flex;\r\n                flex-direction: column;\r\n                .article-head {\r\n                    padding-bottom: 15px;\r\n                    border-bottom: 3px solid red;\r\n                    img {\r\n                        width: 100%;\r\n                        height: 200px;\r\n                        object-fit: cover;\r\n                        border-radius: 15px;\r\n                    }\r\n                }\r\n                .article-body {\r\n                    padding-top: 15px;\r\n                    display: flex;\r\n                    justify-content: space-between;\r\n                    flex-direction: column;\r\n                    height: 100%;\r\n                    .excerpt {\r\n                        text-align: justify;\r\n                        align-self: flex-start;\r\n                    }\r\n                    .link {\r\n                        align-self: flex-start;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",".testimonials--section {\r\n    padding: 100px 0;\r\n    .row {\r\n        justify-content: center;\r\n        flex-wrap: wrap;\r\n        .headline {\r\n            text-transform: uppercase;\r\n            text-align: center;\r\n            margin-bottom: 40px;\r\n        }\r\n        .testimonial {\r\n            .head {\r\n                margin-bottom: 10px;\r\n                display: flex;\r\n                flex-direction: row;\r\n                justify-content: space-around;\r\n                .left {\r\n                    margin-left: 15px;\r\n                    width: 40%;\r\n                    align-self: center;\r\n                    img {\r\n                        height: 100px;\r\n                        width: 100px;\r\n                        object-fit: cover;\r\n                        border-radius: 50%;\r\n                    }\r\n                }\r\n                .right {\r\n                    width: 60%;\r\n                    margin-left: 15px;\r\n                    display: flex;\r\n                    justify-content: space-evenly;\r\n                    flex-direction: column;\r\n                    align-self: center;\r\n                    height: 100px;\r\n                    .name {\r\n                        font-weight: 800;\r\n                        align-self: flex-start;\r\n                        margin: 0;\r\n                    }\r\n                    .details {\r\n                        font-weight: 500;\r\n                        align-self: flex-start;\r\n                        margin: 0;\r\n                    }\r\n                }\r\n            }\r\n            .body {\r\n                clear: both;\r\n                .icon {\r\n                    text-align: center;\r\n                    margin: 0 25px 10px 0;\r\n                    float: left;\r\n                    font-size: 32px;\r\n                    color: $arrow-color;\r\n                    height: 15px;\r\n                }\r\n                p {\r\n                    text-align: justify;\r\n                    font-style: italic;\r\n                }\r\n                &::before, &::after {\r\n                    content: '';\r\n                }\r\n            }\r\n        }\r\n    }\r\n}"]}